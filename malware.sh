#!/bin/sh

USER_NAME="xxx"

GREEN='\033[0;32m'
NC='\033[0m' # No Color
green_echo() { echo -e "${GREEN}$1${NC}"; }

rm -rf /tmp/my_install_*

while true; do
    green_echo " -- Did you partition your drive? [Yes/No] : "
    read -p "Answer: " yn
    case $yn in
        [Yy]* ) echo "Okey"; break;;
        [Nn]* ) exit;;
        * ) echo "Please answer yes or no.";;
    esac
done

# GPU info
while true; do
    green_echo " -- GPU?  1:NVIDIA  2:AMD  3:None  [1/2/3]"
    read -p "Answer: " yn
    case $yn in
        [1]* ) 
            echo "NVIDIA" > /tmp/my_install_gpu_info;
            chmod 644 /tmp/my_install_gpu_info;
            break;;
        [2]* ) 
            echo "AMD" > /tmp/my_install_gpu_info;
            chmod 644 /tmp/my_install_gpu_info;
            break;;
        [3]* ) break;;
        * ) echo "Please answer 1,2 or 3";;
    esac
done

# CPU info 
while true; do
    green_echo " -- CPU?  1:Intel  2:AMD  3:None  [1/2/3] :  " 
    read -p "Answer: " yn
    case $yn in
        [1]* )
            echo "Intel" > /tmp/my_install_cpu_info;
            chmod 644 /tmp/my_install_cpu_info;
            break;;
        [2]*)
            echo "AMD" > /tmp/my_install_cpu_info;
            chmod 644 /tmp/my_install_cpu_info;
            break;;
        [3]* ) break;;
        * ) echo "Please answer 1,2 or 3";;
    esac
done

# laptop ?
while true; do 
    green_echo " -- Install laptop features? [Yes/No]"
    green_echo "(huawei battery threshold, gestures, hibernation, wifi-suspend-fix)"
    read -p "Answer: " yn
    case $yn in
        [Yy]* ) 
            echo "On" > /tmp/my_install_laptop;
            chmod 644 /tmp/my_install_laptop;
            break;;
        [Nn]* ) break;;
        * ) echo "Please answer yes or no.";;
    esac
done

# ddcci nvidia fix 
while true; do
    green_echo " -- Install ddcci driver fix? [Yes/No]"
    read -p "Answer: " yn
    case $yn in
        [Yy]* )
            echo "On" > /tmp/my_install_ddcci;
            chmod 644 /tmp/my_install_ddcci;
            break;;
        [Nn]* ) break;;
        * ) echo "Please answer yes or no.";;
    esac
done

# # WIFI
# ip addr show -> interface name (wlan0)
# iwctl
#     station INT_NAME get-networks
# iwctl --passphrase "PASSWORD" station INT_NAME connect WIFI_NAME

# FS
# cfdisk
#     boot - 500M 
#     swap - 8G 
#     root - rest of disk
#
# mkfs.ext4 /dev/sda3         - root
# mkfs.fat -F 32 /dev/sda1    - boot
# mkswap /dev/sda2            - swap
#
# mount /dev/sda3 /mnt
# mkdir -p /mnt/boot/efi
# mount /dev/sda1 /mnt/boot/efi
# swapon /dev/sda2
#
# pacstrap -K /mnt base base-devel linux linux-firmware sof-firmware linux-headers neovim \
#   git grub dosfstools efibootmgr os-prober mtools networkmanager rustup zsh
#
# # WINDOWS DRIVE
# lsblk
# mkdir -p /mnt/media/windows1
# mount /dev/sdb1 /mnt/media/windows1 - windows partition
#
# # FSTAB
# genfstab -U /mnt >> /mnt/etc/fstab

# arch-chroot /mnt

# SETUP
ln -s /usr/share/zoneinfo/Europe/Moscow /etc/localtime
hwclock --systohc

# Разкомментировать все строки, начинающиеся с ru_RU или en_US
sudo sed -i "s/^#\(ru_RU\|en_US\)/\1/" /etc/locale.gen
locale-gen
echo "LANG=en_US.UTF-8" > /etc/locale.conf

echo "arch" > /etc/hostname
green_echo " -- Root password" # | passwd
passwd 

green_echo "Creating user $USER_NAME"
useradd -m -G wheel -s /bin/zsh $USER_NAME
passwd $USER_NAME
usermod -aG power,video,storage,optical,input,audio $USER_NAME

green_echo " -- Changing visudo"
echo "%wheel ALL=(ALL:ALL) NOPASSWD: ALL" | sudo tee -a /etc/sudoers >/dev/null
sudo visudo -c

systemctl enable NetworkManager

sudo sed -i "/GRUB_DISABLE_OS_PROBER/d" /etc/default/grub
echo "GRUB_DISABLE_OS_PROBER=false" | sudo tee -a /etc/default/grub
grub-install --target=x86_64-efi --bootloader-id=GRUB --recheck
grub-mkconfig -o /boot/grub/grub.cfg

green_echo " -- pacman.conf"
sudo sed -i "s/^#Color$/Color/" /etc/pacman.conf
# Добавить ILoveCandy после Color
sudo sed -i "/^Color$/a ILoveCandy" /etc/pacman.conf
# Раскомментировать VerbosePkgLists
sudo sed -i "s/^#VerbosePkgLists$/VerbosePkgLists/" /etc/pacman.conf
# Раскомментировать блок [multilib]
sudo sed -i "/^#\[multilib\]$/,+1 s/^#//" /etc/pacman.conf

pacman -Syyuu reflector rsync --noconfirm
reflector -c "Russia," -a 6 --sort rate --save /etc/pacman.d/mirrorlist

green_echo "Switching to user"
su - $USER_NAME << EOF
    green_echo() { echo -e "${GREEN}\$1${NC}"; }

    green_echo " -- Installing rustup"
    rustup install nightly stable
    rustup default stable

    green_echo " -- Installing paru"
    git clone https://aur.archlinux.org/paru.git
    cd paru
    makepkg -si --noconfirm
    cd ~/

    green_echo " -- Installing dotfiles"
    git clone https://github.com/Krasin1/dotfiles
    cd dotfiles
    paru -S lsd stow --noconfirm
    stow zsh nvim kitty clangd clang-format config_cfgs \
        dunst eww git rofi wallpapers yazi zathura mpv

    if [ -e /tmp/my_install_cpu_info ]; then
        if [ \$(cat /tmp/my_install_cpu_info) == "AMD" ]; then
            green_echo " -- Installing AMD cpu drivers"
            paru -S amd-ucode xf86-video-amdgpu \
                vulkan-radeon lib32-vulkan-radeon --noconfirm
        else if [ \$(cat /tmp/my_install_cpu_info) == "Intel" ]; then
            green_echo " -- Installing INTEL cpu drivers"
            paru -S intel-ucode vulkan-intel lib32-vulkan-intel \
                intel-media-driver --noconfirm
        fi
    fi

    if [ -e /tmp/my_install_gpu_info ]; then
        if [ \$(cat /tmp/my_install_gpu_info) == "AMD" ]; then
            green_echo " -- Installing AMD gpu drivers"
            paru -S xf86-video-amdgpu vulkan-radeon lib32-vulkan-radeon --noconfirm
        else if [ \$(cat /tmp/my_install_gpu_info) == "NVIDIA" ]; then
            green_echo " -- Installing NVIDIA gpu drivers"
            paru -S nvidia nvidia-setting nvidia-utils lib32-nvidia-utils \
                gwe--noconfirm
        fi
    fi

    green_echo " -- Installing packages"
    paru -S \
        brillo \
        bluez bluez-utils \
        clang gdb \
        ttf-cascadia-code ttf-font-awesome ttf-material-design-icons-desktop-git \
        papirus-icon-theme qogir-gtk-theme qogir-icon-theme \
        pipewire pipewire-alsa pipewire-jack pipewire-pulse \
        alsa-utils wireplumber qpwgraph pavucontrol \
        mpd mpd-mpris mpc ncmpcpp \
        mpv mpv-mpris \
        eww-git playerctl sysstat \
        dunst rofi udiskie fbreader \
        hyprland swaybg grimblast-git swappy \
        cliphist wl-clip \
        lsd lolcat btop neofetch nemo p7zip stow engrampa \
        yazi ffmpeg 7zip jq poppler fd ripgrep fzf zoxide resvg imagemagick ueberzugpp \
        zathura zathura-pdf-poppler \
        firefox \
        hiddify \
        polkit polkit-gnome \
        vesktop-bin qdirstat-bin \
        --noconfirm

        cd ~/dotfiles
        green_echo " -- Installing mpd"
        stow mpd
        cp ~/.config/mpd/log_template ~/.config/mpd/log
        cp ~/.config/mpd/mpd.db_template ~/.config/mpd/mpd.db
        cp ~/.config/mpd/mpdstate_template ~/.config/mpd/mpdstate
        systemctl --user enable mpd.service 
        systemctl --user enable mpd-mpris 

        green_echo " -- Installing ncmpcpp"
        stow ncmpcpp
        cp ~/.config/ncmpcpp/error.log_template ~/.config/ncmpcpp/error.log

        green_echo " -- Installing "
EOF

systemctl enable bluetooth
